STACK Data Structure:- 

A stack is a list of homogenous elements, wherein the addition and deletion of elements occurs only at one end, called the TOP.
--> The elements at bottom of the stack have been in the stack the longest.
--> The top element of the stack is the last element added to the stack.
--> As elements are added and removed from one end(that is top), it follows that the item 
    that is added last will be removed first.
--> This order is known as LIFO [Last In First Out] or FILO [First in Last Out].

STACK:- A data Structure int which the elements are addded and removed from one end only; a last in first out Data Structure[LIFO].

-> Register Stack:- This type of stack is also a memory element present in the memory unit and can handle a small amount of data only.
                    The height of the register stack is always limited as the size of the register stack is very small compared to the memory.
-> Memory Stack :- This type of stack can handle a large amount of memory data. The height of the memory stack is flexible as it occupies a large amount of memory data. 

# Application of Stack in real life:

->  CD/DVD stand.
->  Stack of books in a book shop.
->  Call center systems.
->  Undo and Redo mechanism in text editors.
->  The history of a web browser is stored in the form of a stack.
->  Call logs, E-mails, and Google photos in any gallery are also stored in form of a stack.
->  YouTube downloads and Notifications are also shown in LIFO format(the latest appears first ).
->  Allocation of memory by an operating system while executing a process.

** Stack operations:- 
1. push = Adds a new element at the top of a stack, the stack must exist and must not be full.
2. top = Returns the top element of the stack, the stack must exist and must not be empty.
3. pop = Removes the top element of stack, the stack must exist and must not be empty.
4. isFullStack = Checks whether the stack is full.
5. is EmptyStack = Checks whether the stack is empty or not.
